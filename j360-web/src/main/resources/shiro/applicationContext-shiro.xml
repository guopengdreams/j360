<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 缓存管理器
    <bean id="cacheManager" class="com.fz.us.web.shiro.spring.SpringCacheManagerWrapper">
        <property name="cacheManager" ref="springCacheManager"/>
    </bean>-->

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.fz.us.web.shiro.credentials.RetryLimitHashedCredentialsMatcher">

        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- Realm实现 -->
    <bean id="userRealm" class="com.fz.us.web.shiro.realm.UserRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="false"/>
        <!--<property name="authenticationCachingEnabled" value="true"/>-->
        <!--<property name="authenticationCacheName" value="authenticationCache"/>-->
        <!--<property name="authorizationCachingEnabled" value="true"/>-->
        <!--<property name="authorizationCacheName" value="authorizationCache"/>-->
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 会话DAO，持久化自己实现sessionDao的持久化方案，并且还需要自己实现会话的维护-->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>-->

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <!--集群环境下 不开启quartz验证服务-->
        <property name="sessionValidationSchedulerEnabled" value="false"/>
        <!--<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>-->
        <!--<property name="sessionDAO" ref="sessionDAO"/>-->
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!--使用原生的HttpSession-->
    <bean id="servletContainerSessionManager" class="org.apache.shiro.web.session.mgt.ServletContainerSessionManager"/>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <!--<property name="sessionManager" ref="sessionManager"/>-->
        <property name="sessionManager" ref="servletContainerSessionManager"/>
        <!--<property name="cacheManager" ref="cacheManager"/>-->
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/com/login.action"/>
    </bean>

    <bean id="sysUserFilter" class="com.fz.us.web.shiro.filter.SysUserFilter"/>
    <bean id="statelessAuthcFilter" class="com.fz.us.web.shiro.filter.StatelessAuthcFilter" />
    <bean id="statelessFormAuthcFilter" class="com.fz.us.web.shiro.filter.StatelessFormAuthcFilter" />

    <bean id="appAuthcFilter" class="com.fz.us.web.shiro.filter.AppAuthcFilter" />
    <bean id="appFormAuthcFilter" class="com.fz.us.web.shiro.filter.AppFormAuthcFilter" />
    <bean id="wxAuthcFilter" class="com.fz.us.web.shiro.filter.WxAuthcFilter" >
        <property name="loginUrl" value="./login.action"/>
    </bean>
    <bean id="wxLogoutFilter" class="com.fz.us.web.shiro.filter.WxLogoutFilter" >
        <property name="redirectUrl" value="../login.action"/>
    </bean>
    <bean id="wxFormAuthcFilter" class="com.fz.us.web.shiro.filter.WxFormAuthcFilter" />

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/com/login.action"/>
        <property name="successUrl" value="/com/index.action"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="sysUser" value-ref="sysUserFilter"/>
                <entry key="appAuthc" value-ref="appAuthcFilter"/>
                <entry key="appFormAuthc" value-ref="appFormAuthcFilter"/>
                <entry key="wxAuthc" value-ref="wxAuthcFilter"/>
                <entry key="wxFormAuthc" value-ref="wxFormAuthcFilter"/>
                <entry key="wxLogout" value-ref="wxLogoutFilter" />
            </util:map>
        </property>
        <!--配置定义的过滤器，roles[],
        #用于web，提供了对web url拦截相关的配置，url=拦截器[参数]，拦截器
        roles[admin],
        perms["permission1"]
        ,roles[ROLE_ADMIN]
        -->
        <property name="filterChainDefinitions">
            <value>
                /resource/** = anon
                /cxf/** = anon
                /mp/account/login.action = wxFormAuthc,sysUser
                /mp/account/index.action = wxAuthc,sysUser
                /mp/account/deleteCookie.action = anon
                /mp/account/mptest.action = anon
                /mp/wechat.action = anon
                /mp/login.action = anon
                /mp/wxpassword-forget.action = anon
                /mp/account/connectMp.action = wxFormAuthc,sysUser
                /mp/account/disconnectMp.action = wxLogout
                /mp/account/** = anon
                /mp/** = wxAuthc,sysUser

                /app/help/** = anon

                /app/login.action = appFormAuthc,sysUser
                /app/account/register.action = anon
                /app/** = appAuthc,sysUser

                /com/assets/** = anon
                /com/ico/** = anon
                /com/sound/** = anon
                /com/umeditor/** = anon
                /com/download.html = anon
                /com/index.html = anon
                /com/MobileAppVersion_android.xml = anon
                /com/policy2.htm = anon
                /com/pricing-table.html = anon
                /com/privacy-policy.htm = anon
                /com/smartsalesApp.apk = anon
                /com/update.htm = anon
                /com/US.apk = anon
                /com/mp_update.html = anon

                /com/alipay.action = anon
                /com/notify.action = anon
                /com/register.action = anon
                /com/password-forget.action = anon
                /com/account/** = anon
                /com/login.action = authc
                /com/logout.action = logout
                /com/file.action = anon
                /com/ajax-product!webview.action = anon
                /com/** = user,sysUser,roles[ROLE_USER,ROLE_MANAGER]
                /main/** = user,sysUser,roles[ROLE_ADMIN]

            </value>
        </property>
    </bean>
<!--
Ant路径通配符支持?、*、**，注意通配符匹配不包括目录分隔符“/”：
?：匹配一个字符，如”/admin?”将匹配/admin1，但不匹配/admin或/admin2；
*：匹配零个或多个字符串，如/admin*将匹配/admin、/admin123，但不匹配/admin/1；
**：匹配路径中的零个或多个路径，如/admin/**将匹配/admin/a或/admin/a/b。
-->
    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>